生成启动时间为 2017/7/7 18:59:06。
     1>项目“E:\gitHub\Collection\StateMachine\StateMachine.vcxproj”在节点 2 上(Build 个目标)。
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _CONSOLE /D _LIB /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"E:\gitHub\Collection\\obj\Debug\StateMachine\\" /Fd"E:\gitHub\Collection\\obj\Debug\StateMachine\vc120.pdb" /Gd /TP /analyze- /errorReport:prompt Transition.cpp
         Transition.cpp
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\xrefwrap(283): error C2064: 项不会计算为接受 0 个参数的函数
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(228): 参见对正在编译的函数 模板 实例化“_Ret std::_Callable_obj<int,false>::_ApplyX<_Rx,>(void)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Rx=bool
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(228): 参见对正在编译的函数 模板 实例化“_Ret std::_Callable_obj<int,false>::_ApplyX<_Rx,>(void)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Rx=bool
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(226): 编译类 模板 成员函数“bool std::_Func_impl<_MyWrapper,_Alloc,_Ret,>::_Do_call(void)”时
                 with
                 [
                     _Alloc=std::allocator<std::_Func_class<bool,>>
         ,            _Ret=bool
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(495): 参见对正在编译的类 模板 实例化“std::_Func_impl<_MyWrapper,_Alloc,_Ret,>”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Func_class<bool,>>
         ,            _Ret=bool
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(396): 参见对正在编译的函数 模板 实例化“void std::_Func_class<_Ret,>::_Do_alloc<_Myimpl,_Ty,_Alloc>(_Fty &&,_Alloc)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Ty=int
         ,            _Alloc=std::allocator<std::_Func_class<bool,>>
         ,            _Fty=int
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(396): 参见对正在编译的函数 模板 实例化“void std::_Func_class<_Ret,>::_Do_alloc<_Myimpl,_Ty,_Alloc>(_Fty &&,_Alloc)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Ty=int
         ,            _Alloc=std::allocator<std::_Func_class<bool,>>
         ,            _Fty=int
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(385): 参见对正在编译的函数 模板 实例化“void std::_Func_class<_Ret,>::_Reset_alloc<_Ty,std::allocator<std::_Func_class<_Ret,>>>(_Fty &&,_Alloc)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Ty=int
         ,            _Fty=int
         ,            _Alloc=std::allocator<std::_Func_class<bool,>>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(385): 参见对正在编译的函数 模板 实例化“void std::_Func_class<_Ret,>::_Reset_alloc<_Ty,std::allocator<std::_Func_class<_Ret,>>>(_Fty &&,_Alloc)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Ty=int
         ,            _Fty=int
         ,            _Alloc=std::allocator<std::_Func_class<bool,>>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(688): 参见对正在编译的函数 模板 实例化“void std::_Func_class<_Ret,>::_Reset<_Ty>(_Fty &&)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Ty=int
         ,            _Fty=int
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\functional(688): 参见对正在编译的函数 模板 实例化“void std::_Func_class<_Ret,>::_Reset<_Ty>(_Fty &&)”的引用
                 with
                 [
                     _Ret=bool
         ,            _Ty=int
         ,            _Fty=int
                 ]
                 e:\github\collection\statemachine\transition.cpp(18): 参见对正在编译的函数 模板 实例化“std::function<bool (void)> &std::function<bool (void)>::operator =<int>(_Fx &&)”的引用
                 with
                 [
                     _Fx=int
                 ]
                 e:\github\collection\statemachine\transition.cpp(18): 参见对正在编译的函数 模板 实例化“std::function<bool (void)> &std::function<bool (void)>::operator =<int>(_Fx &&)”的引用
                 with
                 [
                     _Fx=int
                 ]
     1>已完成生成项目“E:\gitHub\Collection\StateMachine\StateMachine.vcxproj”(Build 个目标)的操作 - 失败。

生成失败。

已用时间 00:00:00.36
